<snippet>
    <content><![CDATA[
quantity = fields.Float("Quantity", digits=(16, ${1:Eval('unit_digits', 2)})${2:,
    required=True}${3:, readonly=True}${4}${5:, help="${6}"})
product_uom_category = fields.Function(
    fields.Many2One('product.uom.category', "Product Uom Category"),
    'on_change_with_product_uom_category')
unit = fields.Many2One('product.uom', "Uom"${7:, required=True}${8:,
    readonly=True}${9},
    domain=[
        ('category', '=', Eval('product_uom_category')),
    ],
    depends=['product_uom_category'])
unit_digits = fields.Function(fields.Integer("Unit Digits"),
    'on_change_with_unit_digits')

@staticmethod
def default_unit_digits():
    return 2

@fields.depends('unit')
def on_change_with_unit_digits(self, name=None):
    if self.unit:
        return self.unit.digits
    return 2

@fields.depends('product')
def on_change_with_product_uom_category(self, name=None):
    if self.product:
        return self.product.default_uom_category.id
]]></content>
    <tabTrigger>tfields.Quantity</tabTrigger>
    <scope>source.python</scope>
    <description>Tryton: quantity = fields.Float()</description>
</snippet>
